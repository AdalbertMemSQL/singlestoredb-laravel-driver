name: Tests

on:
  push:
    branches:
      - main

  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      fail-fast: false
      matrix:
        php: [ 7.3, 7.4, 8.0, 8.1 ]
        laravel: [ 8.*, 9.* ]
        dependency-version: [ prefer-lowest, prefer-stable ]
        include:
          - laravel: 8.*
            testbench: 6.*

          - laravel: 9.*
            testbench: 7.*

        exclude:
          # Laravel 8.0 has type incompatibilities with PHP 8.1.
          - laravel: 8.*
            php: 8.1
            dependency-version: prefer-lowest

          # Laravel 9 requires PHP 8.0.
          - laravel: 9.*
            php: 7.3

          - laravel: 9.*
            php: 7.4

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    services:
      singlestore:
        # check for new versions at https://hub.docker.com/r/singlestore/cluster-in-a-box/tags
        image: singlestore/cluster-in-a-box:alma-7.8.2-8c7b918527-4.0.5-1.13.6
        ports:
          - "3306:3306"
        env:
          LICENSE_KEY: ${{ secrets.SINGLESTORE_LICENSE }}
          ROOT_PASSWORD: "test"
          START_AFTER_INIT: "Y"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none

      - name: Install dependencies
        run: |
          composer self-update
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

      - name: Execute Unit Tests
        run: vendor/bin/phpunit

      - name: Wait for SingleStore to start
        run: |
          until mysql -h 127.0.0.1 -u root -ptest -e "select 1"; do
            echo "waiting for mysql..."
            sleep 1
          done

      - name: SingleStore Container Logs
        run: docker logs $(docker ps -ql)

      - name: Create Test Database
        run: |
          mysql -h 127.0.0.1 -u root -ptest -e "create database test"        

      - name: Execute Integration Tests
        run: HYBRID_INTEGRATION=1 vendor/bin/phpunit
        env:
          DB_DATABASE: test
          DB_USERNAME: root
          DB_PASSWORD: test
          DB_HOST: 127.0.0.1